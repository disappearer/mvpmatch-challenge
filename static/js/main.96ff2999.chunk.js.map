{"version":3,"sources":["components/Link/Link.tsx","components/Navbar.tsx","components/MovieList/components/useSorting.ts","util/favorites.ts","components/Movie/Movie.tsx","components/MovieList/components/Filter.tsx","types.ts","components/MovieList/components/Sort.tsx","components/MovieList/MovieList.tsx","util/api.ts","pages/hooks.ts","pages/favorites/Favorites.tsx","pages/search/Search.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Link","to","children","activeOnlyWhenExact","className","match","useRouteMatch","path","exact","Navbar","Sorting","role","aria-label","href","src","width","height","FAVORITES_STORAGE_KEY","getFavorites","favoritesStorageValue","localStorage","getItem","JSON","parse","isInFavorites","imdbId","favorites","includes","toggleFavorite","imdbIdToRemove","filteredFavorites","filter","setItem","stringify","removeFromFavorites","imdbIdToAdd","updatedFavorites","addToFavorites","Movie","movie","imdbID","Poster","Title","Type","Year","isFavorite","alt","onClick","Filter","yearFilterText","onChange","type","placeholder","value","onWheel","e","target","blur","setTimeout","focus","ResponseSuccess","Sort","movieList","setMovieList","useState","None","sorting","setSorting","useEffect","AlphabeticalAscending","sortedAlphabeticalAscending","sort","movieA","movieB","localeCompare","AlphabeticalDescending","sortedAlphabeticalDescending","NumericAscending","sortedNumericAscending","NumericDescending","sortedNumericDescending","handleAlphabeticalSortClick","handleNumericSortClick","useSorting","SortingType","MovieList","movies","favoriteIds","setYearFilterText","event","map","API_KEY","process","API_HOST","useFavorites","setFavoriteIds","toggleFavoriteId","Favorites","isLoading","setIsLoading","results","setResults","error","setError","areFavoritesLoaded","setAreFavoritesLoaded","useCallback","onSuccess","onError","Promise","all","fetch","method","headers","then","response","json","catch","console","log","apiGetFavorites","length","Search","shouldShowResults","setShouldShowResults","searchText","setSearchText","requestError","setRequestError","inputError","setInputError","onSubmit","preventDefault","trimmedSearchText","trim","Response","True","Error","err","apiSearch","inputText","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.96ff2999.chunk.js","sourcesContent":["import { useRouteMatch, Link as RouterLink } from 'react-router-dom';\nimport './Link.css';\n\ntype Props = {\n  to: string;\n  activeOnlyWhenExact: boolean;\n  className?: string;\n};\n\nconst Link: React.FC<Props> = ({\n  to,\n  children,\n  activeOnlyWhenExact,\n  className,\n}) => {\n  const match = useRouteMatch({\n    path: to,\n    exact: activeOnlyWhenExact,\n  });\n\n  return (\n    <RouterLink\n      to={to}\n      className={`Link ${match ? 'is-active' : ''} ${className}`}\n    >\n      {children}\n    </RouterLink>\n  );\n};\n\nexport default Link;\n","import Link from './Link/Link';\n\nfunction Navbar() {\n  return (\n    <nav\n      className=\"navbar is-transparent\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container is-max-desktop\">\n        <div className=\"navbar-brand\">\n          <a className=\"navbar-item\" href=\"https://bulma.io\">\n            <img src=\"./clapper.svg\" width=\"40\" height=\"20\" />\n            <span className=\"is-size-3\">Mooviez</span>\n          </a>\n        </div>\n        <div className=\"navbar-menu\">\n          <div className=\"navbar-end\">\n            <Link className=\"navbar-item\" to=\"/\" activeOnlyWhenExact={true}>\n              Home\n            </Link>\n\n            <Link\n              className=\"navbar-item\"\n              to=\"/favorites\"\n              activeOnlyWhenExact={true}\n            >\n              Favorites\n            </Link>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nexport default Navbar;\n","import { useEffect, useState } from 'react';\nimport { Movie as MovieType } from '../../../types';\n\nexport enum Sorting {\n  None,\n  AlphabeticalAscending,\n  AlphabeticalDescending,\n  NumericAscending,\n  NumericDescending,\n}\n\nexport const useSorting = (\n  movieList: MovieType[],\n  setMovieList: React.Dispatch<React.SetStateAction<MovieType[]>>,\n) => {\n  const [sorting, setSorting] = useState<Sorting>(Sorting.None);\n\n  /* eslint-disable indent */\n  useEffect(() => {\n    switch (sorting) {\n      case Sorting.AlphabeticalAscending: {\n        const sortedAlphabeticalAscending = [...movieList].sort(\n          (movieA, movieB) => movieA.Title.localeCompare(movieB.Title),\n        );\n        setMovieList(sortedAlphabeticalAscending);\n        break;\n      }\n      case Sorting.AlphabeticalDescending: {\n        const sortedAlphabeticalDescending = [...movieList].sort(\n          (movieA, movieB) => movieB.Title.localeCompare(movieA.Title),\n        );\n        setMovieList(sortedAlphabeticalDescending);\n        break;\n      }\n      case Sorting.NumericAscending: {\n        const sortedNumericAscending = [...movieList].sort((movieA, movieB) =>\n          movieA.Year.localeCompare(movieB.Year),\n        );\n        setMovieList(sortedNumericAscending);\n        break;\n      }\n      case Sorting.NumericDescending: {\n        const sortedNumericDescending = [...movieList].sort((movieA, movieB) =>\n          movieB.Year.localeCompare(movieA.Year),\n        );\n        setMovieList(sortedNumericDescending);\n        break;\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [sorting]);\n  /* eslint-enable indent */\n\n  const handleAlphabeticalSortClick = () => {\n    if (sorting === Sorting.AlphabeticalAscending) {\n      setSorting(Sorting.AlphabeticalDescending);\n    } else {\n      setSorting(Sorting.AlphabeticalAscending);\n    }\n  };\n\n  const handleNumericSortClick = () => {\n    if (sorting === Sorting.NumericAscending) {\n      setSorting(Sorting.NumericDescending);\n    } else {\n      setSorting(Sorting.NumericAscending);\n    }\n  };\n\n  return {\n    sorting,\n    handleAlphabeticalSortClick,\n    handleNumericSortClick,\n  };\n};\n","const FAVORITES_STORAGE_KEY = 'favorites';\n\nexport const getFavorites = () => {\n  const favoritesStorageValue = localStorage.getItem(FAVORITES_STORAGE_KEY);\n  const favorites: string[] = favoritesStorageValue\n    ? JSON.parse(favoritesStorageValue)\n    : [];\n  return favorites;\n};\n\nconst addToFavorites = (imdbIdToAdd: string, favorites: string[]) => {\n  const updatedFavorites = [...favorites, imdbIdToAdd];\n  localStorage.setItem(FAVORITES_STORAGE_KEY, JSON.stringify(updatedFavorites));\n\n  return updatedFavorites;\n};\n\nconst removeFromFavorites = (imdbIdToRemove: string, favorites: string[]) => {\n  const filteredFavorites = favorites.filter(\n    (imdbId) => imdbId !== imdbIdToRemove,\n  );\n\n  localStorage.setItem(\n    FAVORITES_STORAGE_KEY,\n    JSON.stringify(filteredFavorites),\n  );\n\n  return filteredFavorites;\n};\n\nexport const isInFavorites = (imdbId: string, favorites: string[]) => {\n  return favorites.includes(imdbId);\n};\n\nexport const toggleFavorite = (imdbId: string) => {\n  const favorites = getFavorites();\n\n  return isInFavorites(imdbId, favorites)\n    ? removeFromFavorites(imdbId, favorites)\n    : addToFavorites(imdbId, favorites);\n};\n","import { Movie as MovieType } from '../../types';\nimport './Movie.css';\n\ntype Props = {\n  movie: MovieType;\n  isFavorite: boolean;\n  toggleFavorite: (imdbId: string) => void;\n};\n\nconst Movie: React.FC<Props> = ({\n  movie: { imdbID, Poster, Title, Type, Year },\n  isFavorite,\n  toggleFavorite,\n}) => {\n  const handleFavoriteClick = () => {\n    toggleFavorite(imdbID);\n  };\n\n  return (\n    <div key={imdbID} className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-3by4\">\n          <img src={Poster} alt=\"Placeholder image\" />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media-content\">\n          <p className=\"title is-4\">\n            <span className=\"icon mr-1 Favorite\" onClick={handleFavoriteClick}>\n              <i\n                className={`mdi ${\n                  isFavorite ? 'mdi-star' : 'mdi-star-outline'\n                }`}\n              ></i>\n            </span>\n            {Title}\n          </p>\n          <p className=\"subtitle is-6\">\n            {Type} ({Year})\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Movie;\n","import { ChangeEventHandler } from 'react';\n\ntype Props = {\n  yearFilterText: string;\n  onChange: ChangeEventHandler<HTMLInputElement> | undefined;\n};\n\nconst Filter: React.FC<Props> = ({ yearFilterText, onChange }) => {\n  return (\n    <div className=\"level-right is-one-fifth is-size-5 field\">\n      <div className=\"control\">\n        <input\n          className=\"input\"\n          type=\"text\"\n          placeholder=\"Filter by year\"\n          value={yearFilterText}\n          onChange={onChange}\n          onWheel={(e) => {\n            (e.target as HTMLElement).blur();\n            setTimeout(function () {\n              (e.target as HTMLElement).focus();\n            }, 10);\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Filter;\n","export type Movie = {\n  Poster: string;\n  Title: string;\n  Type: string;\n  Year: string;\n  imdbID: string;\n};\n\nexport type Results = Movie[];\n\nexport enum ResponseSuccess {\n  True = 'True',\n  False = 'False',\n}\n\ntype SuccessResponse = {\n  Response: ResponseSuccess.True;\n  Search: Results;\n  totalResults: string;\n};\n\ntype ErrorResponse = { Response: ResponseSuccess.False; Error: string };\n\nexport type Response = SuccessResponse | ErrorResponse;\n","import { Movie as MovieType } from '../../../types';\nimport { Sorting as SortingType, useSorting } from './useSorting';\n\ntype Props = {\n  movieList: MovieType[];\n  setMovieList: React.Dispatch<React.SetStateAction<MovieType[]>>;\n};\n\nconst Sort: React.FC<Props> = ({ movieList, setMovieList }) => {\n  const { sorting, handleAlphabeticalSortClick, handleNumericSortClick } =\n    useSorting(movieList, setMovieList);\n\n  return (\n    <div className=\"level-left\">\n      Sort:\n      <button className=\"button ml-5\" onClick={handleAlphabeticalSortClick}>\n        <span className=\"icon is-small\">\n          <span\n            className={`mdi mdi-sort-alphabetical-${\n              sorting === SortingType.AlphabeticalAscending\n                ? 'descending'\n                : 'ascending'\n            }`}\n          />\n        </span>\n      </button>\n      <button className=\"button ml-1\" onClick={handleNumericSortClick}>\n        <span className=\"icon is-small\">\n          <span\n            className={`mdi mdi-sort-numeric-${\n              sorting === SortingType.NumericAscending\n                ? 'descending'\n                : 'ascending'\n            }`}\n          />\n        </span>\n      </button>\n    </div>\n  );\n};\n\nexport default Sort;\n","import { ChangeEventHandler, useEffect, useState } from 'react';\nimport { Movie as MovieType } from '../../types';\nimport { isInFavorites } from '../../util/favorites';\nimport Movie from '../Movie/Movie';\nimport Filter from './components/Filter';\nimport Sort from './components/Sort';\n\ntype Props = {\n  movies: MovieType[];\n  favoriteIds: string[];\n  toggleFavorite: (imdbId: string) => void;\n};\n\nconst MovieList: React.FC<Props> = ({\n  movies,\n  favoriteIds,\n  toggleFavorite,\n}) => {\n  const [movieList, setMovieList] = useState<MovieType[]>([]);\n  const [yearFilterText, setYearFilterText] = useState('');\n\n  useEffect(() => {\n    setMovieList(movies);\n  }, [movies]);\n\n  const handleYearFilterChanmge: ChangeEventHandler<HTMLInputElement> = (\n    event,\n  ) => {\n    setYearFilterText(event.target.value);\n  };\n\n  return (\n    <>\n      <div className=\"block level\">\n        <Sort movieList={movieList} setMovieList={setMovieList} />\n        <Filter\n          yearFilterText={yearFilterText}\n          onChange={handleYearFilterChanmge}\n        />\n      </div>\n      <div className=\"block Search-grid mt-4\">\n        {movieList\n          .filter((movie) => movie.Year.includes(yearFilterText))\n          .map((movie) => (\n            <Movie\n              key={movie.imdbID}\n              movie={movie}\n              isFavorite={isInFavorites(movie.imdbID, favoriteIds)}\n              toggleFavorite={toggleFavorite}\n            />\n          ))}\n      </div>\n    </>\n  );\n};\n\nexport default MovieList;\n","import { Results, Response, ResponseSuccess } from '../types';\n\nconst API_KEY = process.env.REACT_APP_RAPID_API_KEY as string;\nconst API_HOST = process.env.REACT_APP_RAPID_API_HOST as string;\n\nexport const search = (\n  searchText: string,\n  onSuccess: (results: Results) => void,\n  onError: (error: string) => void,\n) => {\n  fetch(`https://${API_HOST}/?s=${searchText}&page=1&r=json`, {\n    method: 'GET',\n    headers: {\n      'x-rapidapi-key': API_KEY,\n      'x-rapidapi-host': API_HOST,\n    },\n  })\n    .then((response) => response.json())\n    .then((response: Response) => {\n      if (response.Response === ResponseSuccess.True) {\n        onSuccess(response.Search);\n      } else {\n        onError(response.Error);\n      }\n    })\n    .catch((err) => {\n      onError(err);\n    });\n};\n\nexport const getFavorites = (\n  favoriteIds: string[],\n  onSuccess: (results: Results) => void,\n  onError: (error: string) => void,\n) => {\n  Promise.all(\n    favoriteIds.map((imdbId) =>\n      fetch(`https://${API_HOST}/?i=${imdbId}&r=json`, {\n        method: 'GET',\n        headers: {\n          'x-rapidapi-key': API_KEY,\n          'x-rapidapi-host': API_HOST,\n        },\n      }).then((response) => response.json()),\n    ),\n  )\n    .then((results) => {\n      onSuccess(results);\n    })\n    .catch((error) => {\n      console.log('error: ', error);\n      onError(error);\n    });\n};\n","import { useState, useEffect } from 'react';\nimport {\n  getFavorites,\n  toggleFavorite as toggleFavoriteId,\n} from '../util/favorites';\n\nexport const useFavorites = () => {\n  const [favoriteIds, setFavoriteIds] = useState<string[]>([]);\n\n  useEffect(() => {\n    const favoriteIds = getFavorites();\n    setFavoriteIds(favoriteIds);\n  }, []);\n\n  const toggleFavorite = (imdbId: string) => {\n    const updatedFavorites = toggleFavoriteId(imdbId);\n    setFavoriteIds(updatedFavorites);\n  };\n\n  return {\n    favoriteIds,\n    toggleFavorite,\n  };\n};\n","import { useCallback, useEffect, useState } from 'react';\nimport MovieList from '../../components/MovieList/MovieList';\nimport { Results } from '../../types';\nimport { getFavorites as apiGetFavorites } from '../../util/api';\nimport { useFavorites } from '../hooks';\n\nfunction Favorites() {\n  const [isLoading, setIsLoading] = useState(true);\n  const [results, setResults] = useState<Results>([]);\n  const [error, setError] = useState<string | null>(null);\n  const [areFavoritesLoaded, setAreFavoritesLoaded] = useState(false);\n\n  const { favoriteIds, toggleFavorite } = useFavorites();\n\n  const clearState = () => {\n    setError(null);\n  };\n\n  const getFavorites = useCallback((favoriteIds: string[]) => {\n    clearState();\n    setIsLoading(true);\n\n    apiGetFavorites(\n      favoriteIds,\n      (results) => {\n        setResults(results);\n        setIsLoading(false);\n      },\n      (error) => {\n        setError(error);\n        setIsLoading(false);\n      },\n    );\n  }, []);\n\n  useEffect(() => {\n    if (!areFavoritesLoaded && favoriteIds.length) {\n      getFavorites(favoriteIds);\n      setAreFavoritesLoaded(true);\n    }\n  }, [areFavoritesLoaded, favoriteIds, getFavorites]);\n\n  return (\n    <>\n      <div className=\"block is-size-4\">Your favorites</div>\n      {isLoading ? (\n        <div>Loading...</div>\n      ) : (\n        <div className=\"block mt-6\">\n          {error ? (\n            <div className=\"is-size-5\">{error}</div>\n          ) : (\n            <MovieList\n              movies={results}\n              favoriteIds={favoriteIds}\n              toggleFavorite={toggleFavorite}\n            />\n          )}\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default Favorites;\n","import { ChangeEventHandler, useState } from 'react';\nimport MovieList from '../../components/MovieList/MovieList';\nimport { Results } from '../../types';\nimport { search as apiSearch } from '../../util/api';\nimport { useFavorites } from '../hooks';\nimport './Search.css';\n\nfunction Search() {\n  const [shouldShowResults, setShouldShowResults] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const [searchText, setSearchText] = useState('');\n  const [results, setResults] = useState<Results>([]);\n\n  const [requestError, setRequestError] = useState<string | null>(null);\n  const [inputError, setInputError] = useState<string | null>(null);\n\n  const { favoriteIds, toggleFavorite } = useFavorites();\n\n  const handleSearchChange: ChangeEventHandler<HTMLInputElement> = (event) => {\n    const inputText = event.target.value;\n    setSearchText(inputText);\n\n    if (inputError && inputText.length) {\n      setInputError(null);\n    }\n  };\n\n  const clearState = () => {\n    setRequestError(null);\n    setShouldShowResults(false);\n  };\n\n  const search: React.FormEventHandler<HTMLFormElement> = (event) => {\n    event.preventDefault();\n\n    if (!searchText.length) {\n      return setInputError('Please enter something.');\n    }\n\n    clearState();\n    setIsLoading(true);\n\n    const trimmedSearchText = searchText.trim();\n    setSearchText(trimmedSearchText);\n\n    apiSearch(\n      trimmedSearchText,\n      (results) => {\n        setResults(results);\n        setShouldShowResults(true);\n        setIsLoading(false);\n      },\n      (err) => {\n        console.log('err: ', err);\n        setRequestError(err);\n        setShouldShowResults(true);\n        setIsLoading(false);\n      },\n    );\n  };\n\n  return (\n    <>\n      <div className=\"block is-size-4\">Welcome to movie search!</div>\n      <div className=\"block\">\n        <form onSubmit={search}>\n          <div className=\"field has-addons\">\n            <div className=\"control\">\n              <input\n                className=\"input\"\n                type=\"text\"\n                placeholder=\"Find a movie or a show\"\n                value={searchText}\n                onChange={handleSearchChange}\n              />\n            </div>\n            <div className=\"control\">\n              <button\n                type=\"submit\"\n                className={`button ${isLoading ? 'is-loading' : ''}`}\n              >\n                <span className=\"icon is-small\">\n                  <span className=\"mdi mdi-movie-search\"></span>\n                </span>\n              </button>\n            </div>\n          </div>\n          {inputError && <p className=\"help is-danger\">{inputError}</p>}\n        </form>\n      </div>\n      {shouldShowResults && (\n        <div className=\"block mt-6\">\n          {requestError ? (\n            <div className=\"is-size-5\">{requestError}</div>\n          ) : (\n            <>\n              <div className=\"block is-size-5\">We have found these movies</div>\n              <MovieList\n                movies={results}\n                favoriteIds={favoriteIds}\n                toggleFavorite={toggleFavorite}\n              />\n            </>\n          )}\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default Search;\n","import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport Favorites from './pages/favorites/Favorites';\nimport Search from './pages/search/Search';\n\nfunction App() {\n  return (\n    <Router>\n      <Navbar />\n\n      <div className=\"section\">\n        <div className=\"container is-max-desktop\">\n          <Switch>\n            <Route path=\"/favorites\">\n              <Favorites />\n            </Route>\n            <Route path=\"/\">\n              <Search />\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}